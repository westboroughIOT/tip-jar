//LED example to display TIP continously//Pugal Shanmugam 01/15/2017#include "LedControlMS.h"/*Now we need a LedControl to work with. pin 12 is connected to the DataIn pin 10 is connected to the CLK pin 11 is connected to LOAD We only have a single MAX7219  */LedControl lc=LedControl(13,15,14,1);/* we always wait a bit between updates of the display */unsigned long delaytime=500;void setup(){  //noTone(0);  //tone(0, 1000, 500);  //noTone(0);  /* The MAX72XX is in power-saving mode on startup,   we have to do a wakeup call  */  lc.shutdown(0,false);   //* Set the brightness to a medium values */  lc.setIntensity(0,8);    //* and clear the display */  lc.clearDisplay(0);}void loop() {  lc.setIntensity(0,8);  writeOnMatrix();       //This bit of code spells out JAMECO  delay(200);  writeOnMatrix();  delay(200);    //rows();               //lc.clearDisplay(0);  //columns();  //lc.clearDisplay(0);  //single();  /*for (int n=0; n<5; n++)  {    for (int z=0; z<16; z++)    {      lc.setIntensity(0,z);      delay(100);    }    for (int z=15; z>-1; --z)    {      lc.setIntensity(0,z);      delay(100);    }  }*/  lc.clearDisplay(0);}/*This method will display the characters for the word "JAMECO" one after the otheron the matrix. (you need at least 5x7 leds to see the whole chars)*/void writeOnMatrix() {  /* here is the data for the characters */  byte A[5]={ B01111111,B10001000,B10001000,B10001000,B01111111  };  byte B[5]={ B11111111,B01001001,B01001001,B00110110,B00000000  };  byte C[5]={ B01111110,B10000001,B10000001,B10000001,B01000010  };  byte D[5]={ B01111111,B01000001,B01000001,B00111110,B00000000  };  byte E[5]={ B11111110,B10010010,B10010010,B10010010,B00000000  };  byte F[5]={ B01111111,B01001000,B01001000,B01001000,B00000000  };  byte G[5]={ B01111110,B10000001,B10001001,B10001001,B01001110  };  byte H[5]={ B01111111,B00001000,B00001000,B00001000,B01111111  };  byte I[5]={ B00100001,B00100001,B00111111,B00100001,B00100001  };  byte J[5]={ B00000110,B00000001,B00000001,B00000001,B11111110  };  byte K[5]={ B11111111,B00011000,B00100100,B01000010,B10000001  };  byte L[5]={ B11111111,B00000001,B00000001,B00000001,B00000001  };  byte M[5]={ B11111100,B01000000,B00100000,B01000000,B11111100  };  byte N[5]={ B00111111,B00010000,B00001000,B00000010,B00111111  };  byte O[5]={ B01111110,B10000001,B10000001,B10000001,B01111110  };  byte P[5]={ B11111111,B10001000,B10001000,B10001000,B01110000  };  byte Q[5]={ B01111100,B10000010,B10000010,B10000011,B01111101  };  byte R[5]={ B11111111,B10001000,B10001100,B10001010,B01110001  };  byte S[5]={ B00110001,B01001001,B01001001,B01001001,B01000110  };  byte T[5]={ B00100000,B00100000,B00111111,B00100000,B00100000  };  byte U[5]={ B00111110,B00000001,B00000001,B00000001,B00111110  };  byte V[5]={ B00111100,B00000010,B00000001,B00000010,B00111100  };  byte W[5]={ B00111111,B00000010,B00000100,B00000010,B00111111  };  byte X[5]={ B00010001,B00001010,B00000100,B00001010,B00010001  };  byte Y[5]={ B11100000,B00010000,B00001111,B00010000,B11100000  };  byte Z[5]={ B00010001,B00010011,B00010101,B00011001,B00010001  };  byte r[5]={ B00111110,B00010000,B00100000,B00100000,B00010000  };  /* now display them one by one with a small delay */  lc.setRow(0,0,T[0]);  lc.setRow(0,1,T[1]);  lc.setRow(0,2,T[2]);  lc.setRow(0,3,T[3]);  lc.setRow(0,4,T[4]);  delay(delaytime);  lc.setRow(0,0,I[0]);  lc.setRow(0,1,I[1]);  lc.setRow(0,2,I[2]);  lc.setRow(0,3,I[3]);  lc.setRow(0,4,I[4]);  delay(delaytime);  lc.setRow(0,4,P[0]);  lc.setRow(0,3,P[1]);  lc.setRow(0,2,P[2]);  lc.setRow(0,1,P[3]);  lc.setRow(0,0,P[4]);  delay(delaytime);  lc.setRow(0,0,0);  lc.setRow(0,1,0);  lc.setRow(0,2,0);  lc.setRow(0,3,0);  lc.setRow(0,4,0);  delay(delaytime);}/* This function lights up a some Leds in a row. The pattern will be repeated on every row. The pattern will blink along with the row-number.row number 4 (index==3) will blink 4 times etc. */void rows() {  for(int row=0;row<8;row++)   {    delay(50);    lc.setRow(0,row,B10100000);    delay(50);    lc.setRow(0,row,(byte)0);    for(int i=0;i<row;i++)     {      delay(50);      lc.setRow(0,row,B10100000);      delay(50);      lc.setRow(0,row,(byte)0);    }  }}/*  This function lights up a some Leds in a column. The pattern will be repeated on every column.The pattern will blink along with the column-number.column number 4 (index==3) will blink 4 times etc.   */void columns() {  for(int col=0;col<8;col++)  {    delay(50);    lc.setColumn(0,col,B10100000);    delay(50);    lc.setColumn(0,col,(byte)0);    for(int i=0;i<col;i++)     {      delay(50);      lc.setColumn(0,col,B10100000);      delay(50);      lc.setColumn(0,col,(byte)0);    }  }}/*  This function will light up every Led on the matrix. The led will blink along with the row-number.  row number 4 (index==3) will blink 4 times etc.  */void single() {  for(int row=0;row<8;row++)   {    for(int col=0;col<8;col++)     {      delay(50);      lc.setLed(0,row,col,true);      delay(50);      for(int i=0;i<col;i++)       {        lc.setLed(0,row,col,false);        delay(50);        lc.setLed(0,row,col,true);        delay(50);      }    }  }}//LED example to display TIP continously//Pugal Shanmugam 01/15/2017#include "LedControlMS.h"/*Now we need a LedControl to work with. pin 12 is connected to the DataIn pin 10 is connected to the CLK pin 11 is connected to LOAD We only have a single MAX7219  */LedControl lc=LedControl(13,15,14,1);/* we always wait a bit between updates of the display */unsigned long delaytime=500;void setup(){  //noTone(0);  //tone(0, 1000, 500);  //noTone(0);  /* The MAX72XX is in power-saving mode on startup,   we have to do a wakeup call  */  lc.shutdown(0,false);   //* Set the brightness to a medium values */  lc.setIntensity(0,8);    //* and clear the display */  lc.clearDisplay(0);}void loop() {  lc.setIntensity(0,8);  writeOnMatrix();       //This bit of code spells out JAMECO  delay(200);  writeOnMatrix();  delay(200);    //rows();               //lc.clearDisplay(0);  //columns();  //lc.clearDisplay(0);  //single();  /*for (int n=0; n<5; n++)  {    for (int z=0; z<16; z++)    {      lc.setIntensity(0,z);      delay(100);    }    for (int z=15; z>-1; --z)    {      lc.setIntensity(0,z);      delay(100);    }  }*/  lc.clearDisplay(0);}/*This method will display the characters for the word "JAMECO" one after the otheron the matrix. (you need at least 5x7 leds to see the whole chars)*/void writeOnMatrix() {  /* here is the data for the characters */  byte A[5]={ B01111111,B10001000,B10001000,B10001000,B01111111  };  byte B[5]={ B11111111,B01001001,B01001001,B00110110,B00000000  };  byte C[5]={ B01111110,B10000001,B10000001,B10000001,B01000010  };  byte D[5]={ B01111111,B01000001,B01000001,B00111110,B00000000  };  byte E[5]={ B11111110,B10010010,B10010010,B10010010,B00000000  };  byte F[5]={ B01111111,B01001000,B01001000,B01001000,B00000000  };  byte G[5]={ B01111110,B10000001,B10001001,B10001001,B01001110  };  byte H[5]={ B01111111,B00001000,B00001000,B00001000,B01111111  };  byte I[5]={ B00100001,B00100001,B00111111,B00100001,B00100001  };  byte J[5]={ B00000110,B00000001,B00000001,B00000001,B11111110  };  byte K[5]={ B11111111,B00011000,B00100100,B01000010,B10000001  };  byte L[5]={ B11111111,B00000001,B00000001,B00000001,B00000001  };  byte M[5]={ B11111100,B01000000,B00100000,B01000000,B11111100  };  byte N[5]={ B00111111,B00010000,B00001000,B00000010,B00111111  };  byte O[5]={ B01111110,B10000001,B10000001,B10000001,B01111110  };  byte P[5]={ B11111111,B10001000,B10001000,B10001000,B01110000  };  byte Q[5]={ B01111100,B10000010,B10000010,B10000011,B01111101  };  byte R[5]={ B11111111,B10001000,B10001100,B10001010,B01110001  };  byte S[5]={ B00110001,B01001001,B01001001,B01001001,B01000110  };  byte T[5]={ B00100000,B00100000,B00111111,B00100000,B00100000  };  byte U[5]={ B00111110,B00000001,B00000001,B00000001,B00111110  };  byte V[5]={ B00111100,B00000010,B00000001,B00000010,B00111100  };  byte W[5]={ B00111111,B00000010,B00000100,B00000010,B00111111  };  byte X[5]={ B00010001,B00001010,B00000100,B00001010,B00010001  };  byte Y[5]={ B11100000,B00010000,B00001111,B00010000,B11100000  };  byte Z[5]={ B00010001,B00010011,B00010101,B00011001,B00010001  };  byte r[5]={ B00111110,B00010000,B00100000,B00100000,B00010000  };  /* now display them one by one with a small delay */  lc.setRow(0,0,T[0]);  lc.setRow(0,1,T[1]);  lc.setRow(0,2,T[2]);  lc.setRow(0,3,T[3]);  lc.setRow(0,4,T[4]);  delay(delaytime);  lc.setRow(0,0,I[0]);  lc.setRow(0,1,I[1]);  lc.setRow(0,2,I[2]);  lc.setRow(0,3,I[3]);  lc.setRow(0,4,I[4]);  delay(delaytime);  lc.setRow(0,4,P[0]);  lc.setRow(0,3,P[1]);  lc.setRow(0,2,P[2]);  lc.setRow(0,1,P[3]);  lc.setRow(0,0,P[4]);  delay(delaytime);  lc.setRow(0,0,0);  lc.setRow(0,1,0);  lc.setRow(0,2,0);  lc.setRow(0,3,0);  lc.setRow(0,4,0);  delay(delaytime);}/* This function lights up a some Leds in a row. The pattern will be repeated on every row. The pattern will blink along with the row-number.row number 4 (index==3) will blink 4 times etc. */void rows() {  for(int row=0;row<8;row++)   {    delay(50);    lc.setRow(0,row,B10100000);    delay(50);    lc.setRow(0,row,(byte)0);    for(int i=0;i<row;i++)     {      delay(50);      lc.setRow(0,row,B10100000);      delay(50);      lc.setRow(0,row,(byte)0);    }  }}/*  This function lights up a some Leds in a column. The pattern will be repeated on every column.The pattern will blink along with the column-number.column number 4 (index==3) will blink 4 times etc.   */void columns() {  for(int col=0;col<8;col++)  {    delay(50);    lc.setColumn(0,col,B10100000);    delay(50);    lc.setColumn(0,col,(byte)0);    for(int i=0;i<col;i++)     {      delay(50);      lc.setColumn(0,col,B10100000);      delay(50);      lc.setColumn(0,col,(byte)0);    }  }}/*  This function will light up every Led on the matrix. The led will blink along with the row-number.  row number 4 (index==3) will blink 4 times etc.  */void single() {  for(int row=0;row<8;row++)   {    for(int col=0;col<8;col++)     {      delay(50);      lc.setLed(0,row,col,true);      delay(50);      for(int i=0;i<col;i++)       {        lc.setLed(0,row,col,false);        delay(50);        lc.setLed(0,row,col,true);        delay(50);      }    }  }}
